// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// ccpca
Rcpp::List ccpca(const arma::mat& X, const int& ncomp, const arma::vec& nzeros, const int& itr, arma::mat Wstart, int nStarts, double tol, bool printLoss);
RcppExport SEXP _sparseWeightBasedPCA_ccpca(SEXP XSEXP, SEXP ncompSEXP, SEXP nzerosSEXP, SEXP itrSEXP, SEXP WstartSEXP, SEXP nStartsSEXP, SEXP tolSEXP, SEXP printLossSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type nzeros(nzerosSEXP);
    Rcpp::traits::input_parameter< const int& >::type itr(itrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Wstart(WstartSEXP);
    Rcpp::traits::input_parameter< int >::type nStarts(nStartsSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< bool >::type printLoss(printLossSEXP);
    rcpp_result_gen = Rcpp::wrap(ccpca(X, ncomp, nzeros, itr, Wstart, nStarts, tol, printLoss));
    return rcpp_result_gen;
END_RCPP
}
// mmsca
Rcpp::List mmsca(const arma::mat& X, const int& ncomp, const arma::vec& ridge, const arma::vec& lasso, const arma::vec& grouplasso, const arma::vec& elitistlasso, arma::uvec& groups, const arma::mat& constraints, const int& itr, arma::mat Wstart, double tol, int nStarts, bool printLoss, bool coorDes, int coorDesItr);
RcppExport SEXP _sparseWeightBasedPCA_mmsca(SEXP XSEXP, SEXP ncompSEXP, SEXP ridgeSEXP, SEXP lassoSEXP, SEXP grouplassoSEXP, SEXP elitistlassoSEXP, SEXP groupsSEXP, SEXP constraintsSEXP, SEXP itrSEXP, SEXP WstartSEXP, SEXP tolSEXP, SEXP nStartsSEXP, SEXP printLossSEXP, SEXP coorDesSEXP, SEXP coorDesItrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ridge(ridgeSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type lasso(lassoSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type grouplasso(grouplassoSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type elitistlasso(elitistlassoSEXP);
    Rcpp::traits::input_parameter< arma::uvec& >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type constraints(constraintsSEXP);
    Rcpp::traits::input_parameter< const int& >::type itr(itrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Wstart(WstartSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type nStarts(nStartsSEXP);
    Rcpp::traits::input_parameter< bool >::type printLoss(printLossSEXP);
    Rcpp::traits::input_parameter< bool >::type coorDes(coorDesSEXP);
    Rcpp::traits::input_parameter< int >::type coorDesItr(coorDesItrSEXP);
    rcpp_result_gen = Rcpp::wrap(mmsca(X, ncomp, ridge, lasso, grouplasso, elitistlasso, groups, constraints, itr, Wstart, tol, nStarts, printLoss, coorDes, coorDesItr));
    return rcpp_result_gen;
END_RCPP
}
// scads
Rcpp::List scads(arma::mat X, int ncomp, double ridge, arma::vec lasso, arma::mat constraints, int itr, arma::mat Wstart, double tol, int nStarts, bool printLoss);
RcppExport SEXP _sparseWeightBasedPCA_scads(SEXP XSEXP, SEXP ncompSEXP, SEXP ridgeSEXP, SEXP lassoSEXP, SEXP constraintsSEXP, SEXP itrSEXP, SEXP WstartSEXP, SEXP tolSEXP, SEXP nStartsSEXP, SEXP printLossSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type ncomp(ncompSEXP);
    Rcpp::traits::input_parameter< double >::type ridge(ridgeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lasso(lassoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type constraints(constraintsSEXP);
    Rcpp::traits::input_parameter< int >::type itr(itrSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Wstart(WstartSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type nStarts(nStartsSEXP);
    Rcpp::traits::input_parameter< bool >::type printLoss(printLossSEXP);
    rcpp_result_gen = Rcpp::wrap(scads(X, ncomp, ridge, lasso, constraints, itr, Wstart, tol, nStarts, printLoss));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sparseWeightBasedPCA_ccpca", (DL_FUNC) &_sparseWeightBasedPCA_ccpca, 8},
    {"_sparseWeightBasedPCA_mmsca", (DL_FUNC) &_sparseWeightBasedPCA_mmsca, 15},
    {"_sparseWeightBasedPCA_scads", (DL_FUNC) &_sparseWeightBasedPCA_scads, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_sparseWeightBasedPCA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
